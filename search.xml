<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pytorch框架深度学习（1）</title>
      <link href="/2023/02/05/Pytorch%E6%A1%86%E6%9E%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/"/>
      <url>/2023/02/05/Pytorch%E6%A1%86%E6%9E%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Deeplearn </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux操作系统基础</title>
      <link href="/2023/02/05/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/02/05/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Item </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数学建模（1)</title>
      <link href="/2023/02/05/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%EF%BC%881%EF%BC%89/"/>
      <url>/2023/02/05/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>乐理知识基础（1）</title>
      <link href="/2023/02/05/%E4%B9%90%E7%90%86%E7%9F%A5%E8%AF%86%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89/"/>
      <url>/2023/02/05/%E4%B9%90%E7%90%86%E7%9F%A5%E8%AF%86%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Music </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>困难题目（1）</title>
      <link href="/2023/02/02/%E5%9B%B0%E9%9A%BE%E9%A2%98%E7%9B%AE%EF%BC%881%EF%BC%89/"/>
      <url>/2023/02/02/%E5%9B%B0%E9%9A%BE%E9%A2%98%E7%9B%AE%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="首先声明！！！"><a href="#首先声明！！！" class="headerlink" title="首先声明！！！"></a>首先声明！！！</h2><hr><ul><li>1.题目为摘抄借鉴。</li><li>2.题解为本人原作，如有使用注明出处。</li><li>3.如有改进地方欢迎批评指正~</li></ul><hr><h2 id="一、构造序列"><a href="#一、构造序列" class="headerlink" title="一、构造序列"></a>一、构造序列</h2><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>请你构造一个 01 序列，序列需要满足以下所有要求：</p><ul><li>恰好包含 n 个 0 和 m 个 1。</li><li>不存在两个或两个以上的 0 连续相邻。</li><li>不存在三个或三个以上的 1 连续相邻。</li></ul><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>共一行，包含两个整数 n,m。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出共一行，如果存在满足条件的 01 序列，则输出满足条件的 01 序列，否则输出 <code>-1</code>。</p><p>如果答案不唯一，则输出任意合理答案均可。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>前 6 个测试点满足 1≤n,m≤10。<br>所有测试点满足 1≤n,m≤10^6。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 8</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">110110110101</span><br></pre></td></tr></table></figure><h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 10</span><br></pre></td></tr></table></figure><h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11011011011011</span><br></pre></td></tr></table></figure><hr><h4 id="算法：-暴力判断特殊情况-一共分为三大类："><a href="#算法：-暴力判断特殊情况-一共分为三大类：" class="headerlink" title="算法：(暴力判断特殊情况,一共分为三大类：)"></a>算法：(暴力判断特殊情况,一共分为三大类：)</h4><ul><li>1.当2*n+2小于m和n大于m+1时不满足条件，输出-1；</li><li>2.特殊情况：当m=n-1和m=2(n+1)时，只存在一种序列；</li><li>3.一般情况：令ans=m%n，首要输出110，ans- -；后依次输出10即可。</li></ul><h4 id="时间复杂度-O-n"><a href="#时间复杂度-O-n" class="headerlink" title="时间复杂度 O(n)"></a>时间复杂度 O(n)</h4><h4 id="C-C-代码"><a href="#C-C-代码" class="headerlink" title="C/C++ 代码"></a>C/C++ 代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">2</span>*n+<span class="number">2</span>&lt;m||n&gt;m+<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);                    <span class="comment">//不符合条件</span></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(m==n<span class="number">-1</span>)&#123;                                     <span class="comment">//特殊情况1</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;m+n;i+=<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">&quot;01&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">2</span>*n+<span class="number">2</span>==m)&#123;                              <span class="comment">//特殊情况2</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;m+n;i+=<span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">&quot;110&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;11&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;                                           <span class="comment">//一般情况</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="number">2</span>*n&lt;=m)&#123;</span><br><span class="line">                <span class="type">int</span> ans=m%n;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;(m+n)/<span class="number">3</span>;i++) <span class="built_in">printf</span>(<span class="string">&quot;110&quot;</span>);</span><br><span class="line">                <span class="keyword">while</span>(ans--) <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">int</span> ans=m%n;</span><br><span class="line">                <span class="type">int</span> sum=(m+n)-ans*<span class="number">3</span>;</span><br><span class="line">                <span class="keyword">while</span>(ans--) <span class="built_in">printf</span>(<span class="string">&quot;110&quot;</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;sum;i+=<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">&quot;10&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二、危险程度"><a href="#二、危险程度" class="headerlink" title="二、危险程度"></a>二、危险程度</h2><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>有 n 种化学物质，编号 1∼n。</p><p>其中，有 m 对物质之间会发生反应。</p><p>现在，要将这些化学物质逐个倒入同一个试管之中，具体倒入顺序不限。</p><p>我们需要计算一下试管的危险值。</p><p>已知，空试管的危险值为 1，每倒入一种化学物质，如果该物质能够与之前倒入试管中的一种或多种物质发生反应，则试管的危险值将乘以 2。</p><p>请你计算并输出，通过合理安排所有化学物质的倒入顺序，能够得到的试管的最大危险值。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 n,m。</p><p>接下来 m 行，每行包含两个整数 x,y 表示化学物质 x 和化学物质 y 之间会发生反应。保证同一对化学物质在输入中最多出现一次。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示最大危险值。</p><h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>前 4 个测试点满足 1≤n≤10。<br>所有测试点满足 1≤n≤50，0≤m≤n(n−1)/2，1≤x&lt;y≤n。</p><h4 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 0</span><br></pre></td></tr></table></figure><h4 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 1</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><h4 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="输入样例3：-1"><a href="#输入样例3：-1" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br></pre></td></tr></table></figure><h4 id="输出样例3：-1"><a href="#输出样例3：-1" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="算法：并查集"><a href="#算法：并查集" class="headerlink" title="算法：并查集"></a>算法：并查集</h4><h4 id="时间复杂度：正常情况下是-O-n"><a href="#时间复杂度：正常情况下是-O-n" class="headerlink" title="时间复杂度：正常情况下是 O(n)"></a>时间复杂度：正常情况下是 O(n)</h4><h4 id="C-C-代码："><a href="#C-C-代码：" class="headerlink" title="C/C++代码："></a>C/C++代码：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">//并查集模板</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x]!=x) p[x]=<span class="built_in">find</span>(p[x]);</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) p[i]=i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">        a=<span class="built_in">find</span>(a),b=<span class="built_in">find</span>(b);</span><br><span class="line">        <span class="keyword">if</span>(a!=b) p[a]=b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sum=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]!=i) sum++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;(<span class="type">long</span> <span class="type">long</span>)<span class="built_in">pow</span>(<span class="number">2</span>,sum<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Practice </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>中等题目（1）</title>
      <link href="/2023/02/01/%E4%B8%AD%E7%AD%89%E9%A2%98%E7%9B%AE%EF%BC%881%EF%BC%89/"/>
      <url>/2023/02/01/%E4%B8%AD%E7%AD%89%E9%A2%98%E7%9B%AE%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="首先声明！！！"><a href="#首先声明！！！" class="headerlink" title="首先声明！！！"></a>首先声明！！！</h2><hr><ul><li>1.题目为摘抄借鉴。</li><li>2.题解为本人原作，如有使用注明出处。</li><li>3.如有改进地方欢迎批评指正~</li></ul><hr><h2 id="一、-双端队列"><a href="#一、-双端队列" class="headerlink" title="一、 双端队列"></a>一、 双端队列</h2><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个双端队列，初始时队列为空。</p><p>你要对其进行 q 次操作，每次操作可能是以下三种之一：</p><ol><li>L x，从队列的左端插入整数 x。</li><li>R x，从队列的右端插入整数 x。</li><li>?  x，请你计算为了使已经处于队列中的整数 x 位于队列的最左端或最右端，至少需要从最左端或最右端弹出多少个数字。<br>保证操作 3 一定合法（ ? x 中的 x 一定已经处于队列之中）。</li></ol><p>每个数字最多被插入到队列中 1 次（队列中一定不会存在重复数字）。</p><p>注意，操作 3 只是询问最少需要弹出多少数字，不是真的要弹出它们，队列中的数字始终不会减少。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 q。</p><p>接下来 q 行，每行包含一个操作信息，格式如题所述。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每个操作 3，输出一行，一个整数表示结果。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>对于 30% 的数据，1≤q≤30,1≤x≤30。<br>对于 100% 的数据，1≤q≤200000,1≤x≤200000。<br>保证至少包含一个操作 3，<br>保证操作 1 和 2 不会重复插入数字。<br>保证操作 3 不会询问队列中不存在的数字。</p><h4 id="输入样例1"><a href="#输入样例1" class="headerlink" title="输入样例1"></a>输入样例1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">L 1</span><br><span class="line">R 2</span><br><span class="line">R 3</span><br><span class="line">? 2</span><br><span class="line">L 4</span><br><span class="line">? 1</span><br><span class="line">L 5</span><br><span class="line">? 1</span><br></pre></td></tr></table></figure><h4 id="输出样例1"><a href="#输出样例1" class="headerlink" title="输出样例1"></a>输出样例1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="输入样例2"><a href="#输入样例2" class="headerlink" title="输入样例2"></a>输入样例2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">L 100</span><br><span class="line">R 100000</span><br><span class="line">R 123</span><br><span class="line">L 101</span><br><span class="line">? 123</span><br><span class="line">L 10</span><br><span class="line">R 115</span><br><span class="line">? 100</span><br><span class="line">R 110</span><br><span class="line">? 115</span><br></pre></td></tr></table></figure><h5 id="输出样例2"><a href="#输出样例2" class="headerlink" title="输出样例2"></a>输出样例2</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure><hr><h4 id="算法1-暴力枚举"><a href="#算法1-暴力枚举" class="headerlink" title="算法1 (暴力枚举)"></a>算法1 (暴力枚举)</h4><h4 id="时间复杂度-O-n-2-：超时！"><a href="#时间复杂度-O-n-2-：超时！" class="headerlink" title="时间复杂度 O(n^2)：超时！"></a>时间复杂度 O(n^2)：超时！</h4><h4 id="C-代码"><a href="#C-代码" class="headerlink" title="C++ 代码"></a>C++ 代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="string">&#x27;?&#x27;</span>)&#123;</span><br><span class="line">            <span class="type">int</span> p=<span class="number">0</span>,j;</span><br><span class="line">            <span class="type">char</span> q;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(b[j]==b[i])&#123;</span><br><span class="line">                    q=a[j];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(++j;j&lt;i;j++)</span><br><span class="line">                <span class="keyword">if</span>(a[j]==q)</span><br><span class="line">                    p++;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="算法2-双指针"><a href="#算法2-双指针" class="headerlink" title="算法2 (双指针)"></a>算法2 (双指针)</h4><h4 id="时间复杂度-O-n"><a href="#时间复杂度-O-n" class="headerlink" title="时间复杂度 O(n)"></a>时间复杂度 O(n)</h4><h4 id="C-C-代码"><a href="#C-C-代码" class="headerlink" title="C/C++ 代码"></a>C/C++ 代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="type">int</span> n,x;</span><br><span class="line"><span class="type">char</span> op[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cin&gt;&gt;op&gt;&gt;x;</span><br><span class="line"></span><br><span class="line">    p[x]=N;</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> left=N,right=N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;op&gt;&gt;x;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(op[<span class="number">0</span>]==<span class="string">&#x27;L&#x27;</span>) p[x]=--left;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op[<span class="number">0</span>]==<span class="string">&#x27;R&#x27;</span>) p[x]=++right;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> sum=<span class="built_in">min</span>(<span class="built_in">abs</span>(p[x]-left),<span class="built_in">abs</span>(p[x]-right));</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二、等差数列"><a href="#二、等差数列" class="headerlink" title="二、等差数列"></a>二、等差数列</h2><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个长度为n的正整数数列 a1,a2,…,an 和一个正整数 k。</p><p>你可以对数列进行以下两种操作：</p><ul><li><code>+ i x</code>，增加操作，将 ai 的值增加 x（x≥1）。</li><li><code>- i x</code>，减少操作，将 ai 的值减少 x（x≥1）。</li></ul><p>要求：在任何时候，你都需要保证每个 ai 的值都是正整数。</p><p>请你使用尽可能少的操作次数，使得数列能够满足：对于所有 i（1≤i&lt;n），(ai+1)−ai=k均成立。</p><p>请你输出所需要的最少操作次数以及对应的具体操作方案。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 n,k。</p><p>第二行包含 $n $个整数 a1,a2,…,an。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>第一行输出一个整数 p，表示所需要的最少操作次数。</p><p>接下来 p 行，用来输出具体操作方案，每行输出一个具体操作<code>+ i x</code>或 <code>- i x</code>。你需要保证输出的 i 和 x 均为正整数，且 1≤i≤n。</p><p>如果最少操作次数的方案不唯一，则输出任意一种方案均可。</p><h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>前$ 3 $个测试点满足 1≤n≤7。<br>所有测试点满足 1≤n≤1000，1≤k≤1000，1≤ai≤1000。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 1</span><br><span class="line">1 2 1 5</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">+ 3 2</span><br><span class="line">- 4 1</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 1</span><br><span class="line">1 2 3 4</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7 1</span><br><span class="line">1 1 2 3 4 5 6</span><br></pre></td></tr></table></figure><h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">+ 2 1</span><br><span class="line">+ 3 1</span><br><span class="line">+ 4 1</span><br><span class="line">+ 5 1</span><br><span class="line">+ 6 1</span><br><span class="line">+ 7 1</span><br></pre></td></tr></table></figure><hr><h4 id="算法：-暴力搜索遍历初值，取最小值为答案"><a href="#算法：-暴力搜索遍历初值，取最小值为答案" class="headerlink" title="算法：(暴力搜索遍历初值，取最小值为答案)"></a>算法：(暴力搜索遍历初值，取最小值为答案)</h4><h4 id="时间复杂度-O-n-2"><a href="#时间复杂度-O-n-2" class="headerlink" title="时间复杂度 O(n^2)"></a>时间复杂度 O(n^2)</h4><h4 id="C-C-代码-1"><a href="#C-C-代码-1" class="headerlink" title="C/C++ 代码"></a>C/C++ 代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e3</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n,k; </span><br><span class="line"></span><br><span class="line"><span class="comment">//暴力搜索遍历初值，取最小值为答案 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;                    <span class="comment">//输入模块 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ans记录最小值，pnt记录最小值时的初值，p为遍历变量 </span></span><br><span class="line">    <span class="type">int</span> ans=N,pnt,p;            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=N;j++)&#123;</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>,p=j;            <span class="comment">//cnt记录每次遍历的ans值 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]!=p) cnt++;</span><br><span class="line">            p+=k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans&gt;cnt)&#123;              <span class="comment">//判断更新最小值 </span></span><br><span class="line">            ans=cnt;</span><br><span class="line">            pnt=j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);           <span class="comment">//先输出p</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;        <span class="comment">//判断输出结果 </span></span><br><span class="line">        <span class="keyword">if</span> (a[i]&gt;pnt)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;- %d %d\n&quot;</span>,i,a[i]-pnt);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i]&lt;pnt) </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;+ %d %d\n&quot;</span>,i,pnt-a[i]);</span><br><span class="line">        pnt+=k;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注：其实严格来说复杂度是-O-n-ai"><a href="#注：其实严格来说复杂度是-O-n-ai" class="headerlink" title="注：其实严格来说复杂度是 O(n*ai)"></a>注：其实严格来说复杂度是 O(n*ai)</h4><hr><h2 id="三、队列（超简单）"><a href="#三、队列（超简单）" class="headerlink" title="三、队列（超简单）"></a>三、队列（超简单）</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><p>给定一个队列，初始时队列为空。</p><p>首先，依次从队尾插入 <code>a</code>、<code>b</code>、<code>c</code>、<code>d</code>、<code>e</code> 五个元素。</p><p>随后，不断重复以下操作：</p><ul><li>设当前队头元素为 x。</li><li>依次从队尾插入两个 x。</li><li>将队头元素 x 弹出队列。</li></ul><p>例如，第 1 轮操作过后，队列变为 <code>b</code>、<code>c</code>、<code>d</code>、<code>e</code>、<code>a</code>、<code>a</code>，第 1 个被弹出队列的元素为 a；第 2 轮操作过后，队列变为 <code>c</code>、<code>d</code>、<code>e</code>、<code>a</code>、<code>a</code>、<code>b</code>、<code>b</code>，第 2 个被弹出队列的元素为 b；第 3 轮操作过后，队列变为 <code>d</code>、<code>e</code>、<code>a</code>、<code>a</code>、<code>b</code>、<code>b</code>、<code>c</code>、<code>c</code>，第 3 个被弹出队列的元素为 <code>c</code>……</p><p>请你计算并输出第 n 个被弹出队列的元素。</p><h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 n。</p><h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出第 n 个被弹出队列的元素。</p><h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>前 5 个测试点满足  1≤n≤10。<br>所有测试点满足  1≤n≤1000000000。</p><h4 id="输入样例1-1"><a href="#输入样例1-1" class="headerlink" title="输入样例1"></a>输入样例1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="输出样例1-1"><a href="#输出样例1-1" class="headerlink" title="输出样例1"></a>输出样例1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure><h4 id="输入样例2-1"><a href="#输入样例2-1" class="headerlink" title="输入样例2"></a>输入样例2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h4 id="输出样例2-1"><a href="#输出样例2-1" class="headerlink" title="输出样例2"></a>输出样例2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure><hr><h4 id="算法：-数学方法"><a href="#算法：-数学方法" class="headerlink" title="算法：(数学方法)"></a>算法：(数学方法)</h4><h4 id="时间复杂度-O-logn"><a href="#时间复杂度-O-logn" class="headerlink" title="时间复杂度 O(logn)"></a>时间复杂度 O(logn)</h4><h4 id="C-C-代码-2"><a href="#C-C-代码-2" class="headerlink" title="C/C++ 代码"></a>C/C++ 代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&gt;ans*<span class="number">5</span>) n-=ans*<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> k=(n<span class="number">-1</span>)/ans;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,k+<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans*=<span class="number">2</span>; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Practice </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>简单题目（1）</title>
      <link href="/2023/02/01/%E7%AE%80%E5%8D%95%E9%A2%98%E7%9B%AE%EF%BC%881%EF%BC%89/"/>
      <url>/2023/02/01/%E7%AE%80%E5%8D%95%E9%A2%98%E7%9B%AE%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="首先声明！！！"><a href="#首先声明！！！" class="headerlink" title="首先声明！！！"></a>首先声明！！！</h2><hr><ul><li>1.题目为摘抄借鉴。</li><li>2.题解为本人原作，如有使用注明出处。</li><li>3.如有改进地方欢迎批评指正~</li></ul><hr><h2 id="一、-最小值"><a href="#一、-最小值" class="headerlink" title="一、 最小值"></a>一、 最小值</h2><p>给定两个整数 a,b,请你计算并输出 a,b,⌊a+b/3⌋ 这三个整数中的最小整数。</p><p>⌊ ⌋ 表示下取整，即忽略小数部分，只取整数部分。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 T，表示共有 T 组数据。</p><p>每组数据占一行，包含两个整数 a,b。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>每组数据输出一行，一个整数，表示结果。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>前 3 个测试点满足 1≤T≤5。<br>所有测试点满足 1≤T≤1000，0≤a,b≤10^9。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">4 4</span><br><span class="line">1000000000 0</span><br><span class="line">7 15</span><br><span class="line">8 7</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">0</span><br><span class="line">7</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="算法：直接作比较"><a href="#算法：直接作比较" class="headerlink" title="算法：直接作比较"></a>算法：直接作比较</h4><p>时间复杂度：O(n)<br>空间复杂度：O(1)</p><h4 id="C-代码："><a href="#C-代码：" class="headerlink" title="C++代码："></a>C++代码：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">min</span>((a+b)/<span class="number">3</span>,<span class="built_in">min</span>(a,b)));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二、分组"><a href="#二、分组" class="headerlink" title="二、分组"></a>二、分组</h2><p>给定一个长度为 n 的数组 a1,a2,…,an。</p><p>请你将这 n个元素重新分组，要求每个组内的元素两两不等，且分组数量应尽可能少。</p><p>请你计算最少所需的分组数量。</p><p>例如，给定一个数组 a=[1,2,4,3,3,2]，我们至少需要将所有元素分为两组，一种可行分组方案为：[1,2,3]和 [2,3,4]。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含一个整数 n。</p><p>第二行包含 n 个整数 a1,a2,…,an。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示最少所需的分组数量。</p><h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>前三个测试点满足 1≤n≤10。</p><p>所有测试点满足 1≤n≤100，1≤ai≤100。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 2 4 3 3 2</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">100</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="算法：贪心-哈希"><a href="#算法：贪心-哈希" class="headerlink" title="算法：贪心+哈希"></a>算法：贪心+哈希</h4><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(n)</li></ul><h4 id="C-代码：-1"><a href="#C-代码：-1" class="headerlink" title="C++代码："></a>C++代码：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        p[a]++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;maxn;i++) sum=<span class="built_in">max</span>(sum,p[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="三、特殊数字"><a href="#三、特殊数字" class="headerlink" title="三、特殊数字"></a>三、特殊数字</h2><p>我们规定，对于一个整数 a，如果其各位数字相加之和能够被 4 整除，则称它是一个特殊数字。</p><p>现在，给定一个整数 n，请你计算并输出不小于 n 的最小特殊数字。</p><h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 n。</p><h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示不小于 n 的最小特殊数字。</p><h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>对于 30% 的数据，1≤n≤100。<br>对于 100% 的数据，1≤n≤1000。</p><h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">42</span><br></pre></td></tr></table></figure><h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">44</span><br></pre></td></tr></table></figure><h4 id="算法：求余判断"><a href="#算法：求余判断" class="headerlink" title="算法：求余判断"></a>算法：求余判断</h4><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(1)</li></ul><h4 id="C-代码：-2"><a href="#C-代码：-2" class="headerlink" title="C++代码："></a>C++代码：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求余位数累加</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">k</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        sum+=n%<span class="number">10</span>;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">k</span>(i)%<span class="number">4</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Practice </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>算法知识点</title>
      <link href="/2023/02/01/%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2023/02/01/%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="一、时间复杂度"><a href="#一、时间复杂度" class="headerlink" title="一、时间复杂度*"></a>一、时间复杂度*</h2><p><img src="C:\Users\Administrator\blog\source_posts\算法知识点\test1.png" alt="test1"></p><h2 id="二、空间复杂度"><a href="#二、空间复杂度" class="headerlink" title="二、空间复杂度"></a>二、空间复杂度</h2><p><img src="C:\Users\Administrator\blog\source_posts\算法知识点\test2.png" alt="test2"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>算法模板</title>
      <link href="/2023/02/01/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/"/>
      <url>/2023/02/01/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>UE5场景制作（1）</title>
      <link href="/2023/02/01/UE5%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C%EF%BC%881%EF%BC%89/"/>
      <url>/2023/02/01/UE5%E5%9C%BA%E6%99%AF%E5%88%B6%E4%BD%9C%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Gameproduction </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Flask框架搭建（1）</title>
      <link href="/2023/01/31/Flask%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%EF%BC%881%EF%BC%89/"/>
      <url>/2023/01/31/Flask%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Item </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Unity游戏控制基础脚本（1）</title>
      <link href="/2023/01/31/Unity%E6%B8%B8%E6%88%8F%E6%8E%A7%E5%88%B6%E5%9F%BA%E7%A1%80%E8%84%9A%E6%9C%AC%EF%BC%881%EF%BC%89/"/>
      <url>/2023/01/31/Unity%E6%B8%B8%E6%88%8F%E6%8E%A7%E5%88%B6%E5%9F%BA%E7%A1%80%E8%84%9A%E6%9C%AC%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="首先声明！！！"><a href="#首先声明！！！" class="headerlink" title="首先声明！！！"></a>首先声明！！！</h2><hr><ul><li>1.脚本为本人总结，如有使用注明出处</li><li>2.Unity采用C#编程语言编写脚本。</li><li>3.脚本内有注释。</li></ul><hr><h3 id="一、TimeTest"><a href="#一、TimeTest" class="headerlink" title="一、TimeTest"></a>一、TimeTest</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> JetBrains.Annotations;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TimeTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> GameObject Prefab;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计时器</span></span><br><span class="line">    <span class="built_in">float</span> timer = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//游戏开始到现在所花的时间</span></span><br><span class="line">        Debug.Log(Time.time);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//时间缩放值</span></span><br><span class="line">        Debug.Log(Time.timeScale);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//固定时间间隔</span></span><br><span class="line">        Debug.Log(Time.fixedDeltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    GameObject p;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        timer = timer + Time.deltaTime;</span><br><span class="line">        <span class="comment">//每一帧所有的时间</span></span><br><span class="line">        <span class="comment">//Debug.Log(Time.deltaTime);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (timer &gt; <span class="number">3</span>&amp;&amp; t == <span class="number">0</span>) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;敌人出现了！&quot;</span>);</span><br><span class="line">            p = Instantiate(Prefab, Vector3.one, Quaternion.identity);</span><br><span class="line">            t = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (timer &gt; <span class="number">6</span>)&#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;敌人消失了！&quot;</span>);</span><br><span class="line">            Destroy(p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="二、SceneTest"><a href="#二、SceneTest" class="headerlink" title="二、SceneTest"></a>二、SceneTest</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SceneTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//场景类，场景管理类 </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取当前场景</span></span><br><span class="line">        Scene scene = SceneManager.GetActiveScene();</span><br><span class="line">        Debug.Log(scene.name);  <span class="comment">//场景名称</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.场景是否已经加载</span></span><br><span class="line">        Debug.Log(scene.isLoaded);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.场景路径</span></span><br><span class="line">        Debug.Log(scene.path);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.场景索引</span></span><br><span class="line">        Debug.Log(scene.buildIndex);</span><br><span class="line">        GameObject[] gos = scene.GetRootGameObjects();</span><br><span class="line">        Debug.Log(gos.Length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//场景管理类:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.直接创建一个新场景</span></span><br><span class="line">        Scene newScene = SceneManager.CreateScene(<span class="string">&quot;newScene&quot;</span>);</span><br><span class="line">        <span class="comment">//2.已加载场景个数</span></span><br><span class="line">        Debug.Log(SceneManager.sceneCount);</span><br><span class="line">        <span class="comment">//3.卸载场景</span></span><br><span class="line">        SceneManager.UnloadSceneAsync(newScene);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//加载场景</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.替换</span></span><br><span class="line">        <span class="comment">//SceneManager.LoadScene(&quot;MyScene&quot;,LoadSceneMode.Single);</span></span><br><span class="line">        <span class="comment">//2.添加（两个场景内容叠加）</span></span><br><span class="line">        SceneManager.LoadScene(<span class="string">&quot;MyScene&quot;</span>, LoadSceneMode.Additive);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="三、EmptyTest"><a href="#三、EmptyTest" class="headerlink" title="三、EmptyTest"></a>三、EmptyTest</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> JetBrains.Annotations;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EmptyTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> GameObject Cube;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取预设体</span></span><br><span class="line">    <span class="keyword">public</span> GameObject Prefab;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//GameObject go=this.gameObject;</span></span><br><span class="line">        Debug.Log(gameObject.name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//tag标签</span></span><br><span class="line">        Debug.Log(gameObject.tag);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//layer图层</span></span><br><span class="line">        Debug.Log(gameObject.layer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//立方体的名称</span></span><br><span class="line">        Debug.Log(Cube.name);</span><br><span class="line">        <span class="comment">//当前真正的激活状态</span></span><br><span class="line">        Debug.Log(Cube.activeInHierarchy);</span><br><span class="line">        <span class="comment">//它自身的激活状态</span></span><br><span class="line">        Debug.Log(Cube.activeSelf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取位置信息</span></span><br><span class="line">        Debug.Log(transform.position);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取其他组件</span></span><br><span class="line">        BoxCollider bc = GetComponent&lt;BoxCollider&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加一个组件</span></span><br><span class="line">        Cube.AddComponent&lt;AudioSource&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过预设体来实例化一个物体</span></span><br><span class="line">        GameObject p = Instantiate(Prefab, Vector3.one, Quaternion.identity);</span><br><span class="line">        Instantiate(Prefab, Vector3.zero, Quaternion.identity);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//销毁物体</span></span><br><span class="line">        Destroy(p);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="四、ApplicationTest"><a href="#四、ApplicationTest" class="headerlink" title="四、ApplicationTest"></a>四、ApplicationTest</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ApplicationTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//游戏数据文件夹路径（只读，加密压缩）</span></span><br><span class="line">        Debug.Log(Application.dataPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//持久化文件夹路径</span></span><br><span class="line">        Debug.Log(Application.persistentDataPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//StreamingAssets文件夹路径（只读，配置文件）</span></span><br><span class="line">        Debug.Log(Application.streamingAssetsPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//临时文件夹</span></span><br><span class="line">        Debug.Log(Application.temporaryCachePath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//控制是否在后台运行</span></span><br><span class="line">        Debug.Log(Application.runInBackground);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打开url（即直接跳转网站）</span></span><br><span class="line">        <span class="comment">//Application.OpenURL(&quot;https://gitee.com/qq2607563994/algorithm-code&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//退出游戏</span></span><br><span class="line">        Application.Quit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="五、TransformTest"><a href="#五、TransformTest" class="headerlink" title="五、TransformTest"></a>五、TransformTest</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TransformTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//获取位置</span></span><br><span class="line">        Debug.Log(transform.position);</span><br><span class="line">        Debug.Log(transform.localPosition);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取旋转</span></span><br><span class="line">        Debug.Log(transform.rotation);</span><br><span class="line">        Debug.Log(transform.localRotation);</span><br><span class="line">        Debug.Log(transform.eulerAngles);</span><br><span class="line">        Debug.Log(transform.localEulerAngles);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取缩放</span></span><br><span class="line">        Debug.Log(transform.localScale);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//向量</span></span><br><span class="line">        Debug.Log(transform.forward);</span><br><span class="line">        Debug.Log(transform.right);</span><br><span class="line">        Debug.Log(transform.up);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="comment">//父子关系</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取父物体</span></span><br><span class="line">        <span class="comment">//GameObject t = transform.parent.gameObject;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//子物体个数</span></span><br><span class="line">        Debug.Log(transform.childCount);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//解除父子关系</span></span><br><span class="line">        transform.DetachChildren();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取子物体</span></span><br><span class="line">        Transform trans = transform.Find(<span class="string">&quot;Child&quot;</span>);</span><br><span class="line">        trans = transform.GetChild(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断一个物体是不是另外一个物体的子物体</span></span><br><span class="line">        <span class="built_in">bool</span> res = transform.IsChildOf(transform);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//时刻看向原点</span></span><br><span class="line">        transform.LookAt(Vector3.zero);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//旋转</span></span><br><span class="line">        transform.Rotate(Vector3.up, <span class="number">0.5f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//绕某个物体旋转</span></span><br><span class="line">        transform.RotateAround(Vector3.zero, Vector3.up, <span class="number">0.2f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//移动</span></span><br><span class="line">        <span class="comment">//transform.Translate(Vector3.forward * 0.1f);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="六、KeyTest"><a href="#六、KeyTest" class="headerlink" title="六、KeyTest"></a>六、KeyTest</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KeyTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//鼠标点击</span></span><br><span class="line">        <span class="comment">//按下鼠标 0左键 1右键 2滚轮</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;按下了鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//持续按下</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;持续按下了鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//抬起按键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;抬起了鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘点击</span></span><br><span class="line">        <span class="comment">//按下</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;按下了A&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKey(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;持续按下了A&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyUp(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;抬起了A&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="七、AsyncTest"><a href="#七、AsyncTest" class="headerlink" title="七、AsyncTest"></a>七、AsyncTest</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AsyncTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    AsyncOperation operation;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        StartCoroutine(loadScene());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//协程方法用来异步加载场景</span></span><br><span class="line">    <span class="function">IEnumerator <span class="title">loadScene</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        operation = SceneManager.LoadSceneAsync(<span class="string">&quot;MyScene&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//加载完场景不要自动跳转</span></span><br><span class="line">        operation.allowSceneActivation = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> operation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">float</span> timer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(operation.progress);</span><br><span class="line">        timer += Time.deltaTime;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果大于5秒后跳转</span></span><br><span class="line">        <span class="keyword">if</span>(timer &gt; <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            operation.allowSceneActivation = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Gameproduction </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
